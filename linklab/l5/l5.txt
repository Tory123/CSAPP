
linkbomb5:     file format elf32-i386


Disassembly of section .init:

000003a0 <_init>:
 3a0:	53                   	push   %ebx
 3a1:	83 ec 08             	sub    $0x8,%esp
 3a4:	e8 b7 00 00 00       	call   460 <__x86.get_pc_thunk.bx>
 3a9:	81 c3 2b 1c 00 00    	add    $0x1c2b,%ebx
 3af:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
 3b5:	85 c0                	test   %eax,%eax
 3b7:	74 05                	je     3be <_init+0x1e>
 3b9:	e8 5a 00 00 00       	call   418 <__gmon_start__@plt>
 3be:	83 c4 08             	add    $0x8,%esp
 3c1:	5b                   	pop    %ebx
 3c2:	c3                   	ret    

Disassembly of section .plt:

000003d0 <.plt>:
 3d0:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 3d6:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 3dc:	00 00                	add    %al,(%eax)
	...

000003e0 <puts@plt>:
 3e0:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 3e6:	68 00 00 00 00       	push   $0x0
 3eb:	e9 e0 ff ff ff       	jmp    3d0 <.plt>

000003f0 <strlen@plt>:
 3f0:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 3f6:	68 08 00 00 00       	push   $0x8
 3fb:	e9 d0 ff ff ff       	jmp    3d0 <.plt>

00000400 <__libc_start_main@plt>:
 400:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 406:	68 10 00 00 00       	push   $0x10
 40b:	e9 c0 ff ff ff       	jmp    3d0 <.plt>

Disassembly of section .plt.got:

00000410 <__cxa_finalize@plt>:
 410:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 416:	66 90                	xchg   %ax,%ax

00000418 <__gmon_start__@plt>:
 418:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 41e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000420 <_start>:
 420:	31 ed                	xor    %ebp,%ebp
 422:	5e                   	pop    %esi
 423:	89 e1                	mov    %esp,%ecx
 425:	83 e4 f0             	and    $0xfffffff0,%esp
 428:	50                   	push   %eax
 429:	54                   	push   %esp
 42a:	52                   	push   %edx
 42b:	e8 22 00 00 00       	call   452 <_start+0x32>
 430:	81 c3 a4 1b 00 00    	add    $0x1ba4,%ebx
 436:	8d 83 0c e8 ff ff    	lea    -0x17f4(%ebx),%eax
 43c:	50                   	push   %eax
 43d:	8d 83 ac e7 ff ff    	lea    -0x1854(%ebx),%eax
 443:	50                   	push   %eax
 444:	51                   	push   %ecx
 445:	56                   	push   %esi
 446:	ff b3 24 00 00 00    	pushl  0x24(%ebx)
 44c:	e8 af ff ff ff       	call   400 <__libc_start_main@plt>
 451:	f4                   	hlt    
 452:	8b 1c 24             	mov    (%esp),%ebx
 455:	c3                   	ret    
 456:	66 90                	xchg   %ax,%ax
 458:	66 90                	xchg   %ax,%ax
 45a:	66 90                	xchg   %ax,%ax
 45c:	66 90                	xchg   %ax,%ax
 45e:	66 90                	xchg   %ax,%ax

00000460 <__x86.get_pc_thunk.bx>:
 460:	8b 1c 24             	mov    (%esp),%ebx
 463:	c3                   	ret    
 464:	66 90                	xchg   %ax,%ax
 466:	66 90                	xchg   %ax,%ax
 468:	66 90                	xchg   %ax,%ax
 46a:	66 90                	xchg   %ax,%ax
 46c:	66 90                	xchg   %ax,%ax
 46e:	66 90                	xchg   %ax,%ax

00000470 <deregister_tm_clones>:
 470:	e8 e4 00 00 00       	call   559 <__x86.get_pc_thunk.dx>
 475:	81 c2 5f 1b 00 00    	add    $0x1b5f,%edx
 47b:	8d 8a 44 00 00 00    	lea    0x44(%edx),%ecx
 481:	8d 82 44 00 00 00    	lea    0x44(%edx),%eax
 487:	39 c8                	cmp    %ecx,%eax
 489:	74 1d                	je     4a8 <deregister_tm_clones+0x38>
 48b:	8b 82 18 00 00 00    	mov    0x18(%edx),%eax
 491:	85 c0                	test   %eax,%eax
 493:	74 13                	je     4a8 <deregister_tm_clones+0x38>
 495:	55                   	push   %ebp
 496:	89 e5                	mov    %esp,%ebp
 498:	83 ec 14             	sub    $0x14,%esp
 49b:	51                   	push   %ecx
 49c:	ff d0                	call   *%eax
 49e:	83 c4 10             	add    $0x10,%esp
 4a1:	c9                   	leave  
 4a2:	c3                   	ret    
 4a3:	90                   	nop
 4a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 4a8:	f3 c3                	repz ret 
 4aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000004b0 <register_tm_clones>:
 4b0:	e8 a4 00 00 00       	call   559 <__x86.get_pc_thunk.dx>
 4b5:	81 c2 1f 1b 00 00    	add    $0x1b1f,%edx
 4bb:	55                   	push   %ebp
 4bc:	8d 8a 44 00 00 00    	lea    0x44(%edx),%ecx
 4c2:	8d 82 44 00 00 00    	lea    0x44(%edx),%eax
 4c8:	29 c8                	sub    %ecx,%eax
 4ca:	89 e5                	mov    %esp,%ebp
 4cc:	53                   	push   %ebx
 4cd:	c1 f8 02             	sar    $0x2,%eax
 4d0:	89 c3                	mov    %eax,%ebx
 4d2:	83 ec 04             	sub    $0x4,%esp
 4d5:	c1 eb 1f             	shr    $0x1f,%ebx
 4d8:	01 d8                	add    %ebx,%eax
 4da:	d1 f8                	sar    %eax
 4dc:	74 14                	je     4f2 <register_tm_clones+0x42>
 4de:	8b 92 28 00 00 00    	mov    0x28(%edx),%edx
 4e4:	85 d2                	test   %edx,%edx
 4e6:	74 0a                	je     4f2 <register_tm_clones+0x42>
 4e8:	83 ec 08             	sub    $0x8,%esp
 4eb:	50                   	push   %eax
 4ec:	51                   	push   %ecx
 4ed:	ff d2                	call   *%edx
 4ef:	83 c4 10             	add    $0x10,%esp
 4f2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 4f5:	c9                   	leave  
 4f6:	c3                   	ret    
 4f7:	89 f6                	mov    %esi,%esi
 4f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000500 <__do_global_dtors_aux>:
 500:	55                   	push   %ebp
 501:	89 e5                	mov    %esp,%ebp
 503:	53                   	push   %ebx
 504:	e8 57 ff ff ff       	call   460 <__x86.get_pc_thunk.bx>
 509:	81 c3 cb 1a 00 00    	add    $0x1acb,%ebx
 50f:	83 ec 04             	sub    $0x4,%esp
 512:	80 bb 44 00 00 00 00 	cmpb   $0x0,0x44(%ebx)
 519:	75 27                	jne    542 <__do_global_dtors_aux+0x42>
 51b:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
 521:	85 c0                	test   %eax,%eax
 523:	74 11                	je     536 <__do_global_dtors_aux+0x36>
 525:	83 ec 0c             	sub    $0xc,%esp
 528:	ff b3 30 00 00 00    	pushl  0x30(%ebx)
 52e:	e8 dd fe ff ff       	call   410 <__cxa_finalize@plt>
 533:	83 c4 10             	add    $0x10,%esp
 536:	e8 35 ff ff ff       	call   470 <deregister_tm_clones>
 53b:	c6 83 44 00 00 00 01 	movb   $0x1,0x44(%ebx)
 542:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 545:	c9                   	leave  
 546:	c3                   	ret    
 547:	89 f6                	mov    %esi,%esi
 549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000550 <frame_dummy>:
 550:	55                   	push   %ebp
 551:	89 e5                	mov    %esp,%ebp
 553:	5d                   	pop    %ebp
 554:	e9 57 ff ff ff       	jmp    4b0 <register_tm_clones>

00000559 <__x86.get_pc_thunk.dx>:
 559:	8b 14 24             	mov    (%esp),%edx
 55c:	c3                   	ret    

0000055d <main>:
 55d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 561:	83 e4 f0             	and    $0xfffffff0,%esp
 564:	ff 71 fc             	pushl  -0x4(%ecx)
 567:	55                   	push   %ebp
 568:	89 e5                	mov    %esp,%ebp
 56a:	53                   	push   %ebx
 56b:	51                   	push   %ecx
 56c:	e8 40 00 00 00       	call   5b1 <__x86.get_pc_thunk.ax>
 571:	05 63 1a 00 00       	add    $0x1a63,%eax
 576:	8d 90 40 00 00 00    	lea    0x40(%eax),%edx
 57c:	8b 12                	mov    (%edx),%edx
 57e:	85 d2                	test   %edx,%edx
 580:	74 0c                	je     58e <main+0x31>
 582:	8d 80 40 00 00 00    	lea    0x40(%eax),%eax
 588:	8b 00                	mov    (%eax),%eax
 58a:	ff d0                	call   *%eax
 58c:	eb 14                	jmp    5a2 <main+0x45>
 58e:	83 ec 0c             	sub    $0xc,%esp
 591:	8d 90 34 e8 ff ff    	lea    -0x17cc(%eax),%edx
 597:	52                   	push   %edx
 598:	89 c3                	mov    %eax,%ebx
 59a:	e8 41 fe ff ff       	call   3e0 <puts@plt>
 59f:	83 c4 10             	add    $0x10,%esp
 5a2:	b8 00 00 00 00       	mov    $0x0,%eax
 5a7:	8d 65 f8             	lea    -0x8(%ebp),%esp
 5aa:	59                   	pop    %ecx
 5ab:	5b                   	pop    %ebx
 5ac:	5d                   	pop    %ebp
 5ad:	8d 61 fc             	lea    -0x4(%ecx),%esp
 5b0:	c3                   	ret    

000005b1 <__x86.get_pc_thunk.ax>:
 5b1:	8b 04 24             	mov    (%esp),%eax
 5b4:	c3                   	ret    

000005b5 <transform_code>:
 5b5:	55                   	push   %ebp
 5b6:	89 e5                	mov    %esp,%ebp
 5b8:	e8 fc ff ff ff       	call   5b9 <transform_code+0x4>
 5bd:	05 17 1a 00 00       	add    $0x1a17,%eax
 5c2:	8b 55 0c             	mov    0xc(%ebp),%edx
 5c5:	8b 94 90 ac e8 ff ff 	mov    -0x1754(%eax,%edx,4),%edx
 5cc:	83 e2 07             	and    $0x7,%edx
 5cf:	83 fa 07             	cmp    $0x7,%edx
 5d2:	77 68                	ja     63c <.L2>
 5d4:	c1 e2 02             	shl    $0x2,%edx
 5d7:	8b 94 02 c0 00 00 00 	mov    0xc0(%edx,%eax,1),%edx
 5de:	01 c2                	add    %eax,%edx
 5e0:	ff e2                	jmp    *%edx

000005e2 <.L3>:
 5e2:	f7 55 08             	notl   0x8(%ebp)
 5e5:	eb 59                	jmp    640 <.L2+0x4>

000005e7 <.L5>:
 5e7:	8b 55 0c             	mov    0xc(%ebp),%edx
 5ea:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
 5f1:	83 e0 03             	and    $0x3,%eax
 5f4:	89 c1                	mov    %eax,%ecx
 5f6:	d3 7d 08             	sarl   %cl,0x8(%ebp)
 5f9:	eb 45                	jmp    640 <.L2+0x4>

000005fb <.L6>:
 5fb:	8b 55 0c             	mov    0xc(%ebp),%edx
 5fe:	8b 84 90 ac e8 ff ff 	mov    -0x1754(%eax,%edx,4),%eax
 605:	f7 d0                	not    %eax
 607:	21 45 08             	and    %eax,0x8(%ebp)
 60a:	eb 34                	jmp    640 <.L2+0x4>

0000060c <.L7>:
 60c:	8b 55 0c             	mov    0xc(%ebp),%edx
 60f:	8b 84 90 ac e8 ff ff 	mov    -0x1754(%eax,%edx,4),%eax
 616:	c1 e0 08             	shl    $0x8,%eax
 619:	09 45 08             	or     %eax,0x8(%ebp)
 61c:	eb 22                	jmp    640 <.L2+0x4>

0000061e <.L8>:
 61e:	8b 55 0c             	mov    0xc(%ebp),%edx
 621:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
 628:	31 45 08             	xor    %eax,0x8(%ebp)
 62b:	eb 13                	jmp    640 <.L2+0x4>

0000062d <.L9>:
 62d:	8b 55 0c             	mov    0xc(%ebp),%edx
 630:	8b 84 90 ac e8 ff ff 	mov    -0x1754(%eax,%edx,4),%eax
 637:	89 45 08             	mov    %eax,0x8(%ebp)
 63a:	eb 04                	jmp    640 <.L2+0x4>

0000063c <.L2>:
 63c:	f7 5d 08             	negl   0x8(%ebp)
 63f:	90                   	nop
 640:	8b 45 08             	mov    0x8(%ebp),%eax
 643:	5d                   	pop    %ebp
 644:	c3                   	ret    

00000645 <generate_code>:
 645:	55                   	push   %ebp
 646:	89 e5                	mov    %esp,%ebp
 648:	53                   	push   %ebx
 649:	83 ec 10             	sub    $0x10,%esp
 64c:	e8 fc ff ff ff       	call   64d <generate_code+0x8>
 651:	81 c3 83 19 00 00    	add    $0x1983,%ebx
 657:	8b 45 08             	mov    0x8(%ebp),%eax
 65a:	88 83 3f 00 00 00    	mov    %al,0x3f(%ebx)
 660:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 667:	eb 20                	jmp    689 <generate_code+0x44>
 669:	0f b6 83 00 00 00 00 	movzbl 0x0(%ebx),%eax
 670:	0f be c0             	movsbl %al,%eax
 673:	ff 75 f8             	pushl  -0x8(%ebp)
 676:	50                   	push   %eax
 677:	e8 fc ff ff ff       	call   678 <generate_code+0x33>
 67c:	83 c4 08             	add    $0x8,%esp
 67f:	88 83 3f 00 00 00    	mov    %al,0x3f(%ebx)
 685:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 689:	8b 45 f8             	mov    -0x8(%ebp),%eax
 68c:	83 f8 08             	cmp    $0x8,%eax
 68f:	76 d8                	jbe    669 <generate_code+0x24>
 691:	90                   	nop
 692:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 695:	c9                   	leave  
 696:	c3                   	ret    

00000697 <encode>:
 697:	55                   	push   %ebp
 698:	89 e5                	mov    %esp,%ebp
 69a:	53                   	push   %ebx
 69b:	83 ec 14             	sub    $0x14,%esp
 69e:	e8 bd fd ff ff       	call   460 <__x86.get_pc_thunk.bx>
 6a3:	81 c3 02 00 00 00    	add    $0x2,%ebx
 6a9:	83 ec 0c             	sub    $0xc,%esp
 6ac:	ff 75 08             	pushl  0x8(%ebp)
 6af:	e8 3c fd ff ff       	call   3f0 <strlen@plt>
 6b4:	83 c4 10             	add    $0x10,%esp
 6b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 6ba:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 6c1:	eb 5d                	jmp    720 <encode+0x89>
 6c3:	8b 55 f0             	mov    -0x10(%ebp),%edx
 6c6:	8b 45 08             	mov    0x8(%ebp),%eax
 6c9:	01 d0                	add    %edx,%eax
 6cb:	0f b6 00             	movzbl (%eax),%eax
 6ce:	0f be c0             	movsbl %al,%eax
 6d1:	0f b6 94 03 ec e8 ff 	movzbl -0x1714(%ebx,%eax,1),%edx
 6d8:	ff 
 6d9:	0f b6 83 3f 00 00 00 	movzbl 0x3f(%ebx),%eax
 6e0:	89 d1                	mov    %edx,%ecx
 6e2:	31 c1                	xor    %eax,%ecx
 6e4:	8b 55 f0             	mov    -0x10(%ebp),%edx
 6e7:	8b 45 08             	mov    0x8(%ebp),%eax
 6ea:	01 d0                	add    %edx,%eax
 6ec:	83 e1 7f             	and    $0x7f,%ecx
 6ef:	89 ca                	mov    %ecx,%edx
 6f1:	88 10                	mov    %dl,(%eax)
 6f3:	8b 55 f0             	mov    -0x10(%ebp),%edx
 6f6:	8b 45 08             	mov    0x8(%ebp),%eax
 6f9:	01 d0                	add    %edx,%eax
 6fb:	0f b6 00             	movzbl (%eax),%eax
 6fe:	3c 1f                	cmp    $0x1f,%al
 700:	7e 0f                	jle    711 <encode+0x7a>
 702:	8b 55 f0             	mov    -0x10(%ebp),%edx
 705:	8b 45 08             	mov    0x8(%ebp),%eax
 708:	01 d0                	add    %edx,%eax
 70a:	0f b6 00             	movzbl (%eax),%eax
 70d:	3c 7f                	cmp    $0x7f,%al
 70f:	75 0b                	jne    71c <encode+0x85>
 711:	8b 55 f0             	mov    -0x10(%ebp),%edx
 714:	8b 45 08             	mov    0x8(%ebp),%eax
 717:	01 d0                	add    %edx,%eax
 719:	c6 00 20             	movb   $0x20,(%eax)
 71c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 720:	8b 45 f0             	mov    -0x10(%ebp),%eax
 723:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 726:	7c 9b                	jl     6c3 <encode+0x2c>
 728:	8b 45 f4             	mov    -0xc(%ebp),%eax
 72b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 72e:	c9                   	leave  
 72f:	c3                   	ret    

00000730 <do_phase>:
 730:	55                   	push   %ebp
 731:	89 e5                	mov    %esp,%ebp
 733:	53                   	push   %ebx
 734:	83 ec 04             	sub    $0x4,%esp
 737:	e8 fc ff ff ff       	call   738 <do_phase+0x8>
 73c:	81 c3 98 18 00 00    	add    $0x1898,%ebx
 742:	68 87 00 00 00       	push   $0x87
 747:	e8 f9 fe ff ff       	call   645 <generate_code>
 74c:	83 c4 04             	add    $0x4,%esp
 74f:	83 ec 0c             	sub    $0xc,%esp
 752:	8d 83 34 00 00 00    	lea    0x34(%ebx),%eax
 758:	50                   	push   %eax
 759:	e8 39 ff ff ff       	call   697 <encode>
 75e:	83 c4 10             	add    $0x10,%esp
 761:	83 ec 0c             	sub    $0xc,%esp
 764:	8d 83 34 00 00 00    	lea    0x34(%ebx),%eax
 76a:	50                   	push   %eax
 76b:	e8 70 fc ff ff       	call   3e0 <puts@plt>
 770:	83 c4 10             	add    $0x10,%esp
 773:	90                   	nop
 774:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 777:	c9                   	leave  
 778:	c3                   	ret    
 779:	66 90                	xchg   %ax,%ax
 77b:	66 90                	xchg   %ax,%ax
 77d:	66 90                	xchg   %ax,%ax
 77f:	90                   	nop

00000780 <__libc_csu_init>:
 780:	55                   	push   %ebp
 781:	57                   	push   %edi
 782:	56                   	push   %esi
 783:	53                   	push   %ebx
 784:	e8 d7 fc ff ff       	call   460 <__x86.get_pc_thunk.bx>
 789:	81 c3 4b 18 00 00    	add    $0x184b,%ebx
 78f:	83 ec 0c             	sub    $0xc,%esp
 792:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 796:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 79c:	e8 ff fb ff ff       	call   3a0 <_init>
 7a1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 7a7:	29 c6                	sub    %eax,%esi
 7a9:	c1 fe 02             	sar    $0x2,%esi
 7ac:	85 f6                	test   %esi,%esi
 7ae:	74 25                	je     7d5 <__libc_csu_init+0x55>
 7b0:	31 ff                	xor    %edi,%edi
 7b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 7b8:	83 ec 04             	sub    $0x4,%esp
 7bb:	55                   	push   %ebp
 7bc:	ff 74 24 2c          	pushl  0x2c(%esp)
 7c0:	ff 74 24 2c          	pushl  0x2c(%esp)
 7c4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 7cb:	83 c7 01             	add    $0x1,%edi
 7ce:	83 c4 10             	add    $0x10,%esp
 7d1:	39 fe                	cmp    %edi,%esi
 7d3:	75 e3                	jne    7b8 <__libc_csu_init+0x38>
 7d5:	83 c4 0c             	add    $0xc,%esp
 7d8:	5b                   	pop    %ebx
 7d9:	5e                   	pop    %esi
 7da:	5f                   	pop    %edi
 7db:	5d                   	pop    %ebp
 7dc:	c3                   	ret    
 7dd:	8d 76 00             	lea    0x0(%esi),%esi

000007e0 <__libc_csu_fini>:
 7e0:	f3 c3                	repz ret 

Disassembly of section .fini:

000007e4 <_fini>:
 7e4:	53                   	push   %ebx
 7e5:	83 ec 08             	sub    $0x8,%esp
 7e8:	e8 73 fc ff ff       	call   460 <__x86.get_pc_thunk.bx>
 7ed:	81 c3 e7 17 00 00    	add    $0x17e7,%ebx
 7f3:	83 c4 08             	add    $0x8,%esp
 7f6:	5b                   	pop    %ebx
 7f7:	c3                   	ret    
