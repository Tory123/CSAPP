
phase5.o:     file format elf32-i386


Disassembly of section .text:

00000000 <transform_code>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	e8 fc ff ff ff       	call   4 <transform_code+0x4>
   8:	05 01 00 00 00       	add    $0x1,%eax
   d:	8b 55 0c             	mov    0xc(%ebp),%edx
  10:	8b 94 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%edx
  17:	83 e2 07             	and    $0x7,%edx
  1a:	83 fa 07             	cmp    $0x7,%edx
  1d:	77 68                	ja     87 <.L2>
  1f:	c1 e2 02             	shl    $0x2,%edx
  22:	8b 94 02 c0 00 00 00 	mov    0xc0(%edx,%eax,1),%edx
  29:	01 c2                	add    %eax,%edx
  2b:	ff e2                	jmp    *%edx

0000002d <.L3>:
  2d:	f7 55 08             	notl   0x8(%ebp)
  30:	eb 59                	jmp    8b <.L2+0x4>

00000032 <.L5>:
  32:	8b 55 0c             	mov    0xc(%ebp),%edx
  35:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
  3c:	83 e0 03             	and    $0x3,%eax
  3f:	89 c1                	mov    %eax,%ecx
  41:	d3 7d 08             	sarl   %cl,0x8(%ebp)
  44:	eb 45                	jmp    8b <.L2+0x4>

00000046 <.L6>:
  46:	8b 55 0c             	mov    0xc(%ebp),%edx
  49:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
  50:	f7 d0                	not    %eax
  52:	21 45 08             	and    %eax,0x8(%ebp)
  55:	eb 34                	jmp    8b <.L2+0x4>

00000057 <.L7>:
  57:	8b 55 0c             	mov    0xc(%ebp),%edx
  5a:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
  61:	c1 e0 08             	shl    $0x8,%eax
  64:	09 45 08             	or     %eax,0x8(%ebp)
  67:	eb 22                	jmp    8b <.L2+0x4>

00000069 <.L8>:
  69:	8b 55 0c             	mov    0xc(%ebp),%edx
  6c:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
  73:	31 45 08             	xor    %eax,0x8(%ebp)
  76:	eb 13                	jmp    8b <.L2+0x4>

00000078 <.L9>:
  78:	8b 55 0c             	mov    0xc(%ebp),%edx
  7b:	8b 84 90 00 00 00 00 	mov    0x0(%eax,%edx,4),%eax
  82:	89 45 08             	mov    %eax,0x8(%ebp)
  85:	eb 04                	jmp    8b <.L2+0x4>

00000087 <.L2>:
  87:	f7 5d 08             	negl   0x8(%ebp)
  8a:	90                   	nop
  8b:	8b 45 08             	mov    0x8(%ebp),%eax
  8e:	5d                   	pop    %ebp
  8f:	c3                   	ret    

00000090 <generate_code>:
  90:	55                   	push   %ebp
  91:	89 e5                	mov    %esp,%ebp
  93:	53                   	push   %ebx
  94:	83 ec 10             	sub    $0x10,%esp
  97:	e8 fc ff ff ff       	call   98 <generate_code+0x8>
  9c:	81 c3 02 00 00 00    	add    $0x2,%ebx
  a2:	8b 45 08             	mov    0x8(%ebp),%eax
  a5:	88 83 00 00 00 00    	mov    %al,0x0(%ebx)
  ab:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  b2:	eb 20                	jmp    d4 <generate_code+0x44>
  b4:	0f b6 83 00 00 00 00 	movzbl 0x0(%ebx),%eax
  bb:	0f be c0             	movsbl %al,%eax
  be:	ff 75 f8             	pushl  -0x8(%ebp)
  c1:	50                   	push   %eax
  c2:	e8 fc ff ff ff       	call   c3 <generate_code+0x33>
  c7:	83 c4 08             	add    $0x8,%esp
  ca:	88 83 00 00 00 00    	mov    %al,0x0(%ebx)
  d0:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
  d4:	8b 45 f8             	mov    -0x8(%ebp),%eax
  d7:	83 f8 08             	cmp    $0x8,%eax
  da:	76 d8                	jbe    b4 <generate_code+0x24>
  dc:	90                   	nop
  dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  e0:	c9                   	leave  
  e1:	c3                   	ret    

000000e2 <encode>:
  e2:	55                   	push   %ebp
  e3:	89 e5                	mov    %esp,%ebp
  e5:	53                   	push   %ebx
  e6:	83 ec 14             	sub    $0x14,%esp
  e9:	e8 fc ff ff ff       	call   ea <encode+0x8>
  ee:	81 c3 02 00 00 00    	add    $0x2,%ebx
  f4:	83 ec 0c             	sub    $0xc,%esp
  f7:	ff 75 08             	pushl  0x8(%ebp)
  fa:	e8 fc ff ff ff       	call   fb <encode+0x19>
  ff:	83 c4 10             	add    $0x10,%esp
 102:	89 45 f4             	mov    %eax,-0xc(%ebp)
 105:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 10c:	eb 5d                	jmp    16b <encode+0x89>
 10e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 111:	8b 45 08             	mov    0x8(%ebp),%eax
 114:	01 d0                	add    %edx,%eax
 116:	0f b6 00             	movzbl (%eax),%eax
 119:	0f be c0             	movsbl %al,%eax
 11c:	0f b6 94 03 00 00 00 	movzbl 0x0(%ebx,%eax,1),%edx
 123:	00 
 124:	0f b6 83 00 00 00 00 	movzbl 0x0(%ebx),%eax
 12b:	89 d1                	mov    %edx,%ecx
 12d:	31 c1                	xor    %eax,%ecx
 12f:	8b 55 f0             	mov    -0x10(%ebp),%edx
 132:	8b 45 08             	mov    0x8(%ebp),%eax
 135:	01 d0                	add    %edx,%eax
 137:	83 e1 7f             	and    $0x7f,%ecx
 13a:	89 ca                	mov    %ecx,%edx
 13c:	88 10                	mov    %dl,(%eax)
 13e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 141:	8b 45 08             	mov    0x8(%ebp),%eax
 144:	01 d0                	add    %edx,%eax
 146:	0f b6 00             	movzbl (%eax),%eax
 149:	3c 1f                	cmp    $0x1f,%al
 14b:	7e 0f                	jle    15c <encode+0x7a>
 14d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 150:	8b 45 08             	mov    0x8(%ebp),%eax
 153:	01 d0                	add    %edx,%eax
 155:	0f b6 00             	movzbl (%eax),%eax
 158:	3c 7f                	cmp    $0x7f,%al
 15a:	75 0b                	jne    167 <encode+0x85>
 15c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 15f:	8b 45 08             	mov    0x8(%ebp),%eax
 162:	01 d0                	add    %edx,%eax
 164:	c6 00 20             	movb   $0x20,(%eax)
 167:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 16b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 16e:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 171:	7c 9b                	jl     10e <encode+0x2c>
 173:	8b 45 f4             	mov    -0xc(%ebp),%eax
 176:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 179:	c9                   	leave  
 17a:	c3                   	ret    

0000017b <do_phase>:
 17b:	55                   	push   %ebp
 17c:	89 e5                	mov    %esp,%ebp
 17e:	53                   	push   %ebx
 17f:	83 ec 04             	sub    $0x4,%esp
 182:	e8 fc ff ff ff       	call   183 <do_phase+0x8>
 187:	81 c3 02 00 00 00    	add    $0x2,%ebx
 18d:	68 87 00 00 00       	push   $0x87
 192:	e8 fc ff ff ff       	call   193 <do_phase+0x18>
 197:	83 c4 04             	add    $0x4,%esp
 19a:	83 ec 0c             	sub    $0xc,%esp
 19d:	8d 83 00 00 00 00    	lea    0x0(%ebx),%eax
 1a3:	50                   	push   %eax
 1a4:	e8 fc ff ff ff       	call   1a5 <do_phase+0x2a>
 1a9:	83 c4 10             	add    $0x10,%esp
 1ac:	83 ec 0c             	sub    $0xc,%esp
 1af:	8d 83 00 00 00 00    	lea    0x0(%ebx),%eax
 1b5:	50                   	push   %eax
 1b6:	e8 fc ff ff ff       	call   1b7 <do_phase+0x3c>
 1bb:	83 c4 10             	add    $0x10,%esp
 1be:	90                   	nop
 1bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 1c2:	c9                   	leave  
 1c3:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.ax:

00000000 <__x86.get_pc_thunk.ax>:
   0:	8b 04 24             	mov    (%esp),%eax
   3:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.bx:

00000000 <__x86.get_pc_thunk.bx>:
   0:	8b 1c 24             	mov    (%esp),%ebx
   3:	c3                   	ret    
